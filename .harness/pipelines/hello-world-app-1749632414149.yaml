pipeline:
  identifier: Build_AdityaJ1222_hello_world_app_1749632418751
  name: Build hello-world-app
  orgIdentifier: default
  projectIdentifier: helloworldtest
  properties:
    ci:
      codebase:
        build: <+input>
        connectorRef: account.Github
        repoName: AdityaJ1222/hello-world-app
  stages:
    - stage:
        identifier: build
        name: build
        spec:
          caching:
            enabled: true
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: dockerrepoconnector
                    repo: adityaa12/harness-hello-world
                    tags:
                      - v1
                    dockerfile: ./dockerfile
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
        type: CI
    - stage:
        name: test
        identifier: test
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Docker
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: Background
                      name: dind
                      identifier: dind
                      spec:
                        connectorRef: account.harnessImage
                        image: docker:dind
                        shell: Sh
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        target:
                          detection: auto
                          type: container
                        advanced:
                          log:
                            level: info
                          args: {}
                        privileged: true
                        mode: orchestration
                        config: default
                        image:
                          type: local_image
                          name: adityaa12/harness-hello-world
                          tag: v1
                  - step:
                      type: Grype
                      name: Grype_1
                      identifier: Grype_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: local_image
                          tag: v1
                          name: adityaa12/harness-hello-world
          sharedPaths:
            - /var/run
    - stage:
        name: deploy-stage
        identifier: deploystage
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: deployservice
          environment:
            environmentRef: gkedev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: devgkeinfra
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
